from gen_vectors import generate_vectors
import numpy as np
import pickle
from os import listdir, mkdir
from os.path import isdir, join
from sklearn.externals.joblib import load
from shutil import copyfile
from subprocess import call

algorithm = 'svm'
models_path = 'models'
data = '~/data/phishing_samples'
extractor_path = '../FeatureExtractor/FeatureExtractor.jar'
gen_dir = 'tmp'

paths = sorted(listdir(join(models_path, algorithm)))
with open(join(models_path, algorithm, paths[-1]), 'rb') as file:
    model = load(file)

copyfile('../FeatureExtractor/jellybean_allmappings.txt', 'jellybean_allmappings.txt')
copyfile('../FeatureExtractor/apicalls_suspicious.txt', 'apicalls_suspicious.txt')
if not isdir(gen_dir):
    mkdir(gen_dir)
if not isdir(join(gen_dir, 'txt')):
    mkdir(join(gen_dir, 'txt'))
if not isdir(join(gen_dir, 'vec')):
    mkdir(join(gen_dir, 'vec'))
result = call(['java', '-jar', extractor_path, data, join(gen_dir, 'txt')])
if result != 0:
    exit(result)

generate_vectors(in_directory=join(gen_dir, 'txt'), out_directory=join(gen_dir, 'vec'))

observations_paths = listdir(join(gen_dir, 'vec'))
observations = []
for path in observations_paths:
    with open(join(gen_dir, 'vec', path), 'rb') as file:
        observations.append(pickle.load(file))

observations = np.array(observations)
result = model.predict(observations)
print(result)
