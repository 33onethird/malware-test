#!/usr/bin/env python3
from gen_vectors import generate_vectors
import numpy as np
import pickle
from os import getcwd, chdir, listdir, mkdir, rmdir
from os.path import isdir, join, expanduser
from shutil import rmtree
from sklearn.externals.joblib import load
from subprocess import call

algorithm = 'svm'
models_path = 'models'
data = expanduser('~/data/phishing_samples')
extractor_path = '../FeatureExtractor'
gen_dir = expanduser('~/data/tmp')

paths = sorted(listdir(join(models_path, algorithm)))
with open(join(models_path, algorithm, paths[-1]), 'rb') as file:
    model = load(file)

if not isdir(gen_dir):
    mkdir(gen_dir)
if not isdir(join(gen_dir, 'txt')):
    mkdir(join(gen_dir, 'txt'))
if not isdir(join(gen_dir, 'vec')):
    mkdir(join(gen_dir, 'vec'))
chdir(extractor_path)
print(getcwd())
result = call(['java', '-jar', 'FeatureExtractor.jar', data, join(gen_dir, 'txt')])
if result != 0:
    exit(result)
chdir('../malware-test')
print(getcwd())
generate_vectors(in_directory=join(gen_dir, 'txt'), out_directory=join(gen_dir, 'vec'), labels_path=None)

observations_paths = listdir(join(gen_dir, 'vec'))
observations = []
for path in observations_paths:
    with open(join(gen_dir, 'vec', path), 'rb') as file:
        observations += pickle.load(file)

observations = np.array(observations)
names = sorted(listdir(join(gen_dir, 'txt')))
rmtree(gen_dir)
result = model.predict(observations)
print('============')
print('Result')
print('============')
for i in range(len(result)):
    print(names[i], 'malware' if result[i] == 1 else 'benignware')
