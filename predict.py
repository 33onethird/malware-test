import numpy as np
from sklearn.externals.joblib import load
from os import listdir, mkdir
from os.path import join
from subprocess import run
from shutil import copyfile

algorithm = 'svm'
models_path = 'models'
data = '~/data/phishing_samples'
extractor_path = '../FeatureExtractor/FeatureExtractor.jar'
gen_dir = 'tmp'

paths = sorted(listdir(join(models_path, algorithm)))
with open(join(models_path, algorithm, paths[-1]), 'rb') as file:
    model = load(file)

copyfile('../FeatureExtractor/jellybean_allmappings.txt', 'jellybean_allmappings.txt')
copyfile('../FeatureExtractor/apicalls_suspicious.txt', 'apicalls_suspicious.txt')
mkdir(join(gen_dir, 'txt'))
mkdir(join(gen_dir, 'vec'))
result = run(['java', '-jar', extractor_path, data, join(gen_dir, 'txt')])
if result.returncode != 0:
    exit(result.returncode)

result = run(['./gen_vectors.py', '-i', join(gen_dir, 'txt'), '-o', join(gen_dir, 'vec')])
if result.returncode != 0:
    exit(result.returncode)

observations_paths = listdir(join(gen_dir, 'vec'))
observations = []
for path in observations:
    with open(join(gen_dir, 'vec', path), 'rb') as file:
        observations.append(load(file))

observations = np.array(observations)
result = model.predict(observations)
print(result)
