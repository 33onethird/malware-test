from pickle import load
import numpy as np
from sklearn import svm
from sklearn.metrics import confusion_matrix

# Load observations
with open('gen/observations-0001.p', 'rb') as file:
    x = load(file)
x = np.array(x)

# Split observations randomly in training and test set
y_tr, y_te = None, None
while y_te is None or 1 not in y_te:  # Ensure that test dataset does not contain solely benignware
    training_size = int(len(x) * .8)
    indices = np.random.permutation(len(x))
    training_idx, test_idx = indices[:training_size], indices[training_size:]
    x_tr, x_te = x[training_idx, :], x[test_idx, :]
    y_tr, y_te = x_tr[:, -1], x_te[:, -1]
    x_tr, x_te = x_tr[:, :-1], x_te[:, :-1]  # Last column is label column
del x

s = svm.SVC()
s.fit(x_tr, y_tr)
cm = confusion_matrix(y_te, s.predict(x_te))
tn = cm[0][0]
fn = cm[0][1]
fp = cm[1][0]
tp = cm[1][1]
if (tp + fn) == 0:
    tpr = 0
else:
    tpr = tp / (tp + fn)
if fp + tn == 0:
    fpr = 0
else:
    fpr = fp / (fp + tn)
print('True positives', tp, 'False positives', fp, 'True negatives', tn, 'False negatives', fn)
print('True positive rate', tpr, 'False positive rate', fpr)
